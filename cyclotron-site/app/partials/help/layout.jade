h3 Layout

p Dashboard pages are divided into rows and columns.  Each Widget in the Dashboard has a height and a width, which correspond to 
    | the number of rows and columns that the Widget spans.  For example, a 2x2 Page can fit four 1x1 Widgets.  But it could also 
    | fit one 2x1 and two 1x1 Widgets.  There are no limits on the number of rows and columns for a page, but lower values tend to
    | work better for all resolutions.

p The Page itself scales up and down based on the browser size, and gracefully handles resize events.  Each Widget will be resized
    | accordingly.  In general, this allows Dashboards to be viewed at different browser resolutions and on mobile devices.  For 
    | example, the Chart Widget resizes the chart to fill the entire space available to that widget.  The Table Widget, on the 
    | other hand, will overflow the Widget if the content is larger than the widget dimensions, and will enable scrolling by default.

p Widgets are sized according to their 
    em gridHeight 
    | and 
    em gridWidth 
    | properties, then the 
    a(href='http://masonry.desandro.com/') Masonry
    |  library is used to push the Widgets together.  The order of the Widgets in the Dashboard matters, in that Masonry 
    | will not rearrange the Widgets to fit, but rather it only removes empty vertical space.  The Widgets are placed in order from the top left, 
    | wrapping as needed based on the number of columns.

p It's also possible to provide more Widgets than will fit on the Dashboard.  Dashboards don't currently allow scrolling, since the original intention
    | is to provide a scaled single-page dashboard view.  

p The default settings are for Pages to be 2x2 and Widgets to be 1x1.

p Here is a JSON example:

pre.code
    | {
    |    "name": "myDashboard",
    |    "theme": "dark",
    |    "pages": [
    |         {
    |             "layout": {
    |                 "gridColumns": 3,
    |                 "gridRows": 2,
    |                 "gutter": 40
    |             },
    |             "widgets": [{
    |                     "gridHeight": 1,
    |                     "gridWidth": 1,
    |                     "widget": "clock"
    |                 }, {
    |                     "gridHeight": 2,
    |                     "gridWidth": 2,
    |                     "widget": "table"
    |                 },
    |                 {
    |                     "gridHeight": 1,
    |                     "gridWidth": 1,
    |                     "widget": "clock"
    |                 }
    |             ]
    |         }
    |    ]
    | }

p 
    | The example above hardcodes the dashboard to have three columns and two rows. The Widgets each specify a
    | gridWidth and gridHeight, which fits them neatly into the grid.  The default gutter size was also increased.


h4 Properties
property-table(properties='config.dashboard.properties.pages.properties.layout.properties')


h4 Absolute Layout

p It is also possible to define absolute sizes for all or some Widgets.  The Widgets have 
    em height 
    | and 
    em width 
    | properties which take CSS-compatible dimensions, e.g. "20%", "200px", "5rem".  
    | This is not recommended since it prevents the Dashboard from scaling correctly, but may be desirable
    | to specify dimensions in pixels for Dashboards intended for a display with a known size.

p There's not much benefit to using percentages, since the grid layout implemention is effectively the same.